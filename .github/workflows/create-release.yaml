# Название рабочего процесса
name: Create Release Assets with Nuitka and UPX

# Триггер: запускать только при публикации нового релиза
on:
  release:
    types: [published]

# Задачи
jobs:
  build-and-upload:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      # 1. Клонируем код репозитория
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Устанавливаем Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # 3. Устанавливаем зависимости
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nuitka
          pip install -r requirements.txt

      # 4. Устанавливаем UPX для максимального сжатия
      # Chocolatey уже предустановлен на Windows-раннерах GitHub
      - name: Install UPX for compression
        run: choco install upx --yes

      # 5. Собираем и сжимаем .exe файл с помощью Nuitka
      # Nuitka автоматически обнаружит и использует UPX, если он доступен
      - name: Build and compress executable with Nuitka
        run: python -m nuitka --onefile --windows-console-mode=disable --enable-plugin=tk-inter --include-package-data=tkinterdnd2 --assume-yes-for-downloads --lto=yes --remove-output --noinclude-module=unittest --noinclude-module=doctest --noinclude-module=asyncio --noinclude-module=sqlite3 --output-filename="xyzconverter" --output-dir=dist xyzconverter.py

      # 6. Создаем ZIP-архив с программой
      - name: Create ZIP from executable
        run: Compress-Archive -Path dist/xyzconverter.exe -DestinationPath "xyzconverter.zip"

      # 7. Загружаем наш ZIP-файл как ассет к релизу
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: "xyzconverter.zip"
